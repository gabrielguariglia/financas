{"version":3,"sources":["App.js","index.js"],"names":["App","useState","moeda","setMoeda","valor","setValor","obtendoMoeda","setObtendoMoeda","a","process","url","fetch","then","response","json","data","catch","error","console","message","Navbar","bg","Brand","href","Jumbotron","Row","className","onChange","event","target","value","Spinner","animation","variant","Card","style","width","Body","Title","currencies","name","Text","buy","variation","Button","onClick","obtemMoeda","size","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAwFeA,MA7Ef,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEaF,mBAAS,MAFtB,mBAENG,EAFM,KAECC,EAFD,OAG2BJ,oBAAS,GAHpC,mBAGNK,EAHM,KAGQC,EAHR,iDAMb,WAA0BL,GAA1B,eAAAM,EAAA,6DACED,GAAgB,GACDE,WACXC,EAHN,6EAGkFR,EAHlF,gBAEiBO,YAFjB,SAIQE,MAAMD,GAETE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJV,EAASU,MAEVC,OAAM,SAAUC,GACfC,QAAQD,MAAR,iCAAwCA,EAAME,aAXpD,OAaEZ,GAAgB,GAblB,4CANa,sBAuBb,OACE,qCACE,cAACa,EAAA,EAAD,CAAQC,GAAG,UAAX,SACE,cAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,UAAnB,gCAEF,eAACC,EAAA,EAAD,WACE,oDACA,uGAIF,eAACC,EAAA,EAAD,CAAKC,UAAU,yBAAf,UACE,yBAAQC,SAAU,SAAAC,GAAK,OAAIzB,EAASyB,EAAMC,OAAOC,QAAjD,UACE,wBAAQA,MAAM,GAAd,oCACA,wBAAQA,MAAM,MAAd,uBACA,wBAAQA,MAAM,MAAd,mBACA,wBAAQA,MAAM,MAAd,+BACA,wBAAQA,MAAM,MAAd,uBACA,wBAAQA,MAAM,MAAd,6BACA,wBAAQA,MAAM,MAAd,wBAECxB,GACD,cAACmB,EAAA,EAAD,CAAKC,UAAU,yBAAf,SACE,cAACK,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,iBAM1C,cAACR,EAAA,EAAD,CAAKC,UAAU,yBAAf,SAEGtB,GACC,cAAC8B,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,SACE,eAACF,EAAA,EAAKG,KAAN,WACE,cAACH,EAAA,EAAKI,MAAN,UAAalC,EAAMmC,WAAWC,OAC9B,eAACN,EAAA,EAAKO,KAAN,WACE,4CAAerC,EAAMmC,WAAWG,OAChC,mDAAgBtC,EAAMmC,WAAWI,UAAjC,iBAQV,cAAClB,EAAA,EAAD,CAAKC,UAAU,yBAAf,SACE,eAACkB,EAAA,EAAD,CAAQC,QAAS,kBArEV,2CAqEgBC,CAAW5C,IAAQ+B,QAAQ,UAAlD,UACG3B,EAAe,cAACyB,EAAA,EAAD,CAASgB,KAAK,KAAKf,UAAU,SAAY,cAAC,IAAD,CAAmBgB,MAAM,UAAUD,KAAK,OADnG,uBC5ERE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.35f92629.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Row from 'react-bootstrap/Row'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport { GiMagnifyingGlass } from 'react-icons/gi'\n\n\nfunction App() {\n  const [moeda, setMoeda] = useState('')\n  const [valor, setValor] = useState(null)\n  const [obtendoMoeda, setObtendoMoeda] = useState(false)\n\n  //pegando valores da API\n  async function obtemMoeda(moeda) {\n    setObtendoMoeda(true)\n    let chaveAPI = process.env.REACT_APP_APIKEY\n    let url = `https://api.hgbrasil.com/finance?array_limit=1&fields=only_results,${moeda}&key=${chaveAPI}`\n    await fetch(url)\n    \n      .then(response => response.json())\n      .then(data => {\n        setValor(data)\n      })\n      .catch(function (error) {\n        console.error(`Erro ao obter a Moeda: ${error.message}`)\n      })\n    setObtendoMoeda(false)\n  }\n\n\n  return (\n    <>\n      <Navbar bg=\"warning\">\n        <Navbar.Brand href=\"#inicio\">FatecFinanças</Navbar.Brand>\n      </Navbar>\n      <Jumbotron >\n        <h1> Fatec Finanças</h1>\n        <h3>Consulta da cotação das principais moedas ao redor do globo.</h3>\n      </Jumbotron>\n\n       {/* Seleciona a moeda que o usuario queira ver */}\n      <Row className=\"justify-content-center\">\n        <select onChange={event => setMoeda(event.target.value)}>\n          <option value=\"\">  Selecione uma moeda </option>\n          <option value=\"BTC\"> Bitcoin </option>\n          <option value=\"EUR\"> Euro</option>\n          <option value=\"GBP\"> Libra Esterlina </option>\n          <option value=\"USD\"> Dólar</option>\n          <option value=\"ARS\"> Peso Argentino</option>\n          <option value=\"JPY\"> Iene  </option>\n        </select>\n          {obtendoMoeda &&\n          <Row className=\"justify-content-center\">\n            <Spinner animation=\"border\" variant=\"primary\" />\n          </Row>\n        }\n        \n      </Row>\n      \n      <Row className=\"justify-content-center\">\n        \n        {valor &&\n          <Card style={{ width: '18rem' }}>\n            <Card.Body>\n              <Card.Title>{valor.currencies.name}</Card.Title>\n              <Card.Text>\n                <h6>Valor : R${valor.currencies.buy}</h6>\n                <h6>Variação : {valor.currencies.variation}%</h6>\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        }\n      </Row>\n\n      {/* Ative a função que busca os valores na API */}\n      <Row className=\"justify-content-center\">\n        <Button onClick={() => obtemMoeda(moeda)} variant=\"success\">\n          {obtendoMoeda ? <Spinner size=\"sm\" animation=\"grow\" /> : <GiMagnifyingGlass color=\"#000000\" size=\"20\" />}\n        Obter Moeda</Button>\n      </Row>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}